name: Report Workflow

on:
  pull_request:
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        node-version: ['12']

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      
      - name: Set up Node ${{matrix.node-version}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}

      - name: Backend - Installing Requirements
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          echo "Finished Upgrading PIP"
          pip install -r requirements.txt
          echo "Finished Installing Requirements"
        shell: bash
      
      - name: Backend - Creating Lint + Bug Reports
        working-directory: ./backend
        run: |
          rm -f ../reports/backend/*_report.*
          echo "Finished Deleting Backend Reports"
          flake8 ./*/*.py --show-source --statistics --verbose --max-line-length=100 --ignore=W --output-file=../reports/backend/GOOD_Bug_report.txt
          flake8 ./*/*.py --show-source --statistics --verbose --max-line-length=100 --ignore=E --output-file=../reports/backend/GOOD_Lint_report.txt
          echo "Finished Creating Backend Reports"
        shell: bash

      - name: Backend - Creating Coverage Report
        run: |
          rm -f reports/backend/coverage.txt
          echo "Removed Backend Coverage File"
          pynt cover_backend
          echo "Finished Generating Backend Coverage Report"
        shell: bash
        env:
          CLIENT_ID: ${{ secrets.BACKEND_OAUTH_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.BACKEND_OAUTH_CLIENT_SECRET }}
          STRIPE_API_KEY: ${{ secrets.BACKEND_STRIPE_API_KEY }}
          
      - name: Frontend - Installing Requirements
        working-directory: ./frontend
        run: |
          npm install

      - name: Frontend - Creating Lint + Bug Reports
        working-directory: ./frontend
        run: |
          rm -f ../reports/frontend/*_report.*
          echo "Finished Deleting Frontend Reports"
          npx eslint . -f node_modules/eslint-html-reporter/reporter.js -o ../reports/frontend/GOOD_Bug_report.html
          npx standard | npx standard-reporter --json > ../reports/frontend/GOOD_Lint_report.json
          echo "Finished Creating Backend Reports"
        shell: bash

      - name: Frontend - Creating Coverage Report
        run: |
          rm -f reports/frontend/coverage.txt
          echo "Removed Frontend Coverage File"
          pynt cover_frontend
          echo "Finished Generating Frontend Coverage Report"
        shell: bash
        env:
          STRIPE_API_KEY: ${{ secrets.FRONTEND_STRIPE_API_KEY }}

      - name: Commiting Reports
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          echo "Finished Configuring Git"
          git add ./reports/backend/*_report.*
          git add ./reports/frontend/*_report.*
          echo "Finished Adding Reports"
          git commit -m "Adding Reports : Post Merge"
          echo "Finished Commiting Reports"
        shell: bash
      
      - name: Pushing Reports
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
